{
    "root": true,
    "env": {
        "browser": true,
        "es6": true,
        "node": true
    },
    "parser": "@typescript-eslint/parser",
    "ignorePatterns": [
        "**/*.html",
        "**/*.scss",
        "**/*.svg",
        "**/*.ico",
        "**/*.png",
        "**/*.json"
    ],
    "parserOptions": {
        "project": "tsconfig.json",
        "sourceType": "module",
        "ecmaFeatures": {
            "modules": true
        }
    },
    "plugins": ["@typescript-eslint", "@typescript-eslint/tslint", "jasmine"],
    "rules": {
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/array-type": "off",
        "@typescript-eslint/ban-types": ["error"],
        "@typescript-eslint/consistent-type-assertions": "error",
        "@typescript-eslint/consistent-type-definitions": "error",
        "@typescript-eslint/explicit-member-accessibility": [
            "off",
            {
                "accessibility": "explicit"
            }
        ],
        "@typescript-eslint/member-delimiter-style": [
            "error",
            {
                "multiline": {
                    "delimiter": "semi",
                    "requireLast": true
                },
                "singleline": {
                    "delimiter": "semi",
                    "requireLast": false
                }
            }
        ],
        "@typescript-eslint/no-shadow": "error",
        "@typescript-eslint/member-ordering": [
            "error",
            {
                "default": [
                    "public-field",
                    "private-field",
                    "constructor",
                    "public-method",
                    "private-method"
                ]
            }
        ],
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/non-nullish value": "off",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/quotes": [
            "error",
            "single",
            {
                "allowTemplateLiterals": true
            }
        ],
        "@typescript-eslint/semi": ["error", "always"],
        "@typescript-eslint/triple-slash-reference": "error",
        "@typescript-eslint/type-annotation-spacing": "error",
        "@typescript-eslint/unified-signatures": "error",
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "format": ["camelCase", "UPPER_CASE", "PascalCase"],
                "selector": "variable"
            },
            {
                "format": ["camelCase", "UPPER_CASE"],
                "selector": "classProperty",
                "leadingUnderscore": "allow"
            },
            {
                "format": ["camelCase"],
                "selector": "classProperty",
                "filter": {
                    "regex": "^([A-Z]+_?)+",
                    "match": false
                },
                "modifiers": ["private"],
                "leadingUnderscore": "require"
            },
            {
                "format": ["UPPER_CASE"],
                "selector": "classProperty",
                "filter": {
                    "regex": "^([A-Z]+_?)+",
                    "match": true
                },
                "modifiers": ["private"],
                "leadingUnderscore": "forbid"
            },
            {
                "format": ["PascalCase", "camelCase", "UPPER_CASE"],
                "selector": "classProperty",
                "modifiers": ["readonly"]
            },
            {
                "format": ["PascalCase"],
                "selector": "class"
            }
        ],
        "arrow-parens": ["off", "as-needed"],
        "capitalized-comments": "off",
        "comma-dangle": "off",
        "complexity": "off",
        "constructor-super": "error",
        "curly": "error",
        "dot-notation": "error",
        "eol-last": "error",
        "eqeqeq": ["error", "smart"],
        "guard-for-in": "error",
        "id-match": "error",
        "import/order": "off",
        "max-classes-per-file": "off",
        "max-len": [
            "error",
            {
                "code": 140,
                "ignorePattern": "^import"
            }
        ],
        "object-curly-spacing": ["error", "always"],
        "new-parens": "error",
        "no-bitwise": "error",
        "no-caller": "error",
        "no-cond-assign": "error",
        "no-console": ["error", { "allow": ["warn", "error"] }],
        "no-debugger": "error",
        "no-empty": "off",
        "no-eval": "error",
        "no-fallthrough": "error",
        "no-invalid-this": "off",
        "no-multiple-empty-lines": "off",
        "no-new-wrappers": "error",
        "no-shadow": "off",
        "no-throw-literal": "error",
        "no-trailing-spaces": "error",
        "no-undef-init": "error",
        "no-underscore-dangle": "off",
        "no-unsafe-finally": "error",
        "no-unused-expressions": "error",
        "no-unused-labels": "error",
        "no-var": "error",
        "object-shorthand": "error",
        "one-var": ["error", "never"],
        "prefer-const": "error",
        "quote-props": ["error", "as-needed"],
        "radix": "error",
        "space-before-function-paren": [
            "error",
            {
                "asyncArrow": "always",
                "named": "never",
                "anonymous": "never"
            }
        ],
        "spaced-comment": ["off", "never"],
        "use-isnan": "error",
        "valid-typeof": "off",
        "indent": [
            "error",
            4,
            {
                "SwitchCase": 1,
                "MemberExpression": "off"
            }
        ],
        "@typescript-eslint/tslint/config": [
            "error",
            {
                "lintFile": "./tslint.json"
            }
        ],
        "jasmine/no-focused-tests": "error",
        "jasmine/no-disabled-tests": "error",
        "jasmine/no-spec-dupes": ["error", "branch"],
        "jasmine/missing-expect": "error",
        "jasmine/expect-matcher": "error",
        "jasmine/expect-single-argument": "error"
    }
}
